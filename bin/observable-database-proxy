#!/usr/bin/env node

require = require("esm")(module);
const exit = require("../lib/errors").exit;

const name = yargs =>
  yargs.positional("name", {
    describe: "Database connector name",
    type: "string"
  });

const argv = require("yargs")
  .usage(`Usage: $0 <command> <name> [options]`)
  .command(`start <name> [options]`, `Start a database proxy server`, name)
  .command(`add <name>`, `Add a new database proxy configuration`, name)
  .command(
    `remove <name>`,
    `Remove an existing database proxy configuration`,
    name
  )
  .command(
    `reset <name>`,
    `Reset the shared secret for an existing database proxy configuration`,
    name
  )
  .command(`list`, `List all configured database proxies`)
  .demandCommand(1, `A command is required`)
  .describe(
    `sslcert`,
    `Set the SSL certificate location for an HTTPS database proxy`
  )
  .describe(
    `sslkey`,
    `Set the SSL private key location for an HTTPS database proxy`
  )
  .example(`$0 start localdb`, `Run an HTTP database proxy named "localdb"`)
  .example(
    `$0 start localssl --sslkey ../ssl/localhost.key --sslcert ../ssl/localhost.crt`,
    `Run an HTTPS database proxy named "localssl"`
  )
  .example(`$0 add localdb`, `Configure a new database proxy named "localdb"`)
  .argv;

const {start, add, remove, reset, list} = require("../lib/commands");
const [command] = argv._;

switch (command) {
  case "start":
    start(argv);
    break;
  case "add":
    add(argv);
    break;
  case "remove":
    remove(argv);
    break;
  case "reset":
    reset(argv);
    break;
  case "list":
    list(argv);
    break;
  default:
    exit("Unknown command");
}
